<style lang="less">
	.container {
		height: 100%;
		box-sizing: border-box;
	}
	@font-face {
		font-family: "iconfont";
		src: url('data:application/x-font-woff;charset=utf-8;base64,') format('woff');
	}
	.iconfont {
		font-family:"iconfont" !important;
		font-size:16px;
		font-style:normal;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}

	.icon-tupianliebiao:before { content: "\e69e"; }

	.icon-liebiao:before { content: "\e88f"; }

	.icon-triangle-bottom:before { content: "\e62b"; }

	.icon-triangle-top:before { content: "\e635"; }

	.icon-jian:before { content: "\e74b"; }

	.icon-jia:before { content: "\e623"; }

	.icon-dizhi:before { content: "\e603"; }

	.icon-fenlei:before { content: "\e607"; }

	.icon-shibaibiaoqing:before { content: "\e638"; }

	.icon-daifukuan01:before { content: "\e626"; }

	.icon-wode:before { content: "\e66e"; }

	.icon-yiwanchengdingdan:before { content: "\e625"; }

	.icon-kefu:before { content: "\e61b"; }

	.icon-gouwuche1:before { content: "\e61a"; }

	.icon-duigou:before { content: "\e64d"; }

	.icon-xiazai9:before { content: "\e622"; }

	.icon-chenggong:before { content: "\e617"; }

	.icon-dianhua:before { content: "\e69a"; }

	.icon-shanchu:before { content: "\e642"; }

	.icon-daishouhuo:before { content: "\e600"; }

	.icon-shuangjiantou:before { content: "\e624"; }

	.icon-lib:before { content: "\e628"; }

	.icon-quanbudingdan:before { content: "\e62e"; }

	.icon-home:before { content: "\e7ec"; }

	.icon-shouhuodizhi:before { content: "\e644"; }

	.icon-home-copy:before { content: "\e7ed"; }

	.icon-gouwuche-copy:before { content: "\e7ee"; }

	.icon-wode-copy:before { content: "\e7ef"; }

	.icon-fenlei-copy:before { content: "\e7f0"; }



</style>

<script>
	import wepy from 'wepy'
	import 'wepy-async-function'

	export default class extends wepy.app {
		config = {
			pages: [
				'pages/index',
				'pages/category',
				'pages/library',
				'pages/member',
				'pages/goodsInfo',
				'pages/gbook',
				'pages/article',
				'pages/memberInfo',
				'pages/payment',
				'pages/couponInfo',
				'pages/categoryInfo',
			],
			window: {
				backgroundTextStyle: 'light',
				navigationBarBackgroundColor: '#fff',
				navigationBarTitleText: 'WeChat',
				navigationBarTextStyle: 'black'
			},
			tabBar: {
				color: '#999',
				selectedColor: '#d53b33',
				backgroundColor: '',
				borderStyle: '',
				list: [
					{
						pagePath: 'pages/index',
						text: '首页',
						iconPath: './image/home.png',
						selectedIconPath: './image/home-active.png'
					},
					{
						pagePath: 'pages/category',
						text: '分类',
						iconPath: './image/category.png',
						selectedIconPath: './image/category-active.png'
					},
					{
						pagePath: 'pages/library',
						text: '购物车',
						iconPath: './image/lib.png',
						selectedIconPath: './image/lib-active.png'
					},
					{
						pagePath: 'pages/member',
						text: '我的',
						iconPath: './image/member.png',
						selectedIconPath: './image/member-active.png'
					},
				]
			}
		}

		globalData = {
			userInfo: null,
			extJson: null
		}

		constructor () {
			super()
			this.use('requestfix')
		}

		onLaunch() {
			this.getExtJson()
			this.login()
			this.getPhoneNumber()
		}

		getPhoneNumber(){
			wepy.request({
				url: `${this.extJson.api_host}/restapi/merchants/${this.extJson.merchant_id}`,
				data: {
					config_id: this.extJson.config_id
				},
				success: (res) => {
					const phoneNumber = res.data.data.phone || res.data.data.linkman_mobile
					wepy.setStorageSync('phoneNumber', phoneNumber)
				}
			})
		}

		getExtJson(){ //获取第三方ext.json 中ext字段中的数据
			if(wepy.getExtConfigSync){ //低版本兼容检测
				this.extJson = wepy.getExtConfigSync()
			}
		}

		login(){ //调用微信登录并获取openid
			wx.login({
				success: (res) => {
					if (res.code) {
						//发起网络请求 
						wx.request({
							url: `${this.extJson.api_host}/restapi/default/new-openid`,
							data: {
								config_id: this.extJson.config_id,
								code: res.code
							},
							success: (d) => {
								this.extJson.openid = d.data.data.openid
								wx.setStorageSync('openid', d.data.data.openid);
							}
						})
					} else {
						console.log(`获取用户登录态失败！${res.errMsg}`)
					}
				}
			})
		}

		getUserInfo(cb) { //获取用户信息 头像、昵称等 
			const that = this
			if (this.globalData.userInfo) {
				return this.globalData.userInfo
			}
			wepy.getUserInfo({
				success (res) {
				that.globalData.userInfo = res.userInfo
				cb && cb(res.userInfo)
				}
			})
		}
	}
</script>
