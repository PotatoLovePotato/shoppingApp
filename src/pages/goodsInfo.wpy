
<style lang="scss">
    @import '../mixins/wxParse/wxParse.wxss';
    // page{
    //     width: 100%;
    //     height: 100%;
    //     position: fixed;
    //     left: 0;
    //     top: 0;
    // }
    .goods_info{
        &_wrap{
            // width: 100%;
            // height: 100%;
            // position: fixed;
            // left: 0;top: 0;
            // z-index: 10;
            padding-bottom: 90rpx;
            box-sizing: border-box;
            .carousel_wrap{
                height: 600rpx;
            }
        }
        &_name{
            font-size: 32rpx;
            line-height: 48rpx;
        }
        &_msg{
            padding: 0 30rpx;
            border-bottom: 12rpx solid #f6f6f6;
        }
        &_number{
            overflow: hidden;
            font-size: 24rpx;
            line-height: 48rpx;
        }
        &_price{
            float: left;
            display: flex;
            text{
                font-size: 30rpx;
                margin-right: 10rpx;
                color: #fc3e62;
            }
            text:last-child{
                color: #666;
                text-decoration: line-through;
                font-size: 24rpx;
            }
        }
        &_stock{
            float: right;
            display: flex;
            text{
                margin-right: 10rpx;
            }
        }
        &_text{
            padding: 12rpx 30rpx;
            &_title{
                font-size: 32rpx;
                line-height: 50rpx;
                text-align: center;
                border-bottom: 5rpx solid #fc3e62;
            }
            image{
                width: 100%;
            }
        }
    }
    .tools{
        &_wrap{
            width: 100%;
            position: fixed;
            left: 0;
            bottom: 0;
            z-index: 9;
            display: flex;
            background-color: #fff;
            border-top: 1px solid #ccc;
            font-size: 36rpx;
            view{
                flex-grow: 1;
                text-align: center;
                line-height: 88rpx;
                border-right: 1px solid #dbdbdb;
            }
        }
        &_btns{
            border-right: 0!important;
            background-color: #ff9503;
            color: #fff;
            font-size: 36rpx;
            &:last-child{
                background-color: #fc1a44;
            }
        }
    }
    .icon_size{
        position: relative;
        flex-shrink: 0;
        text{
            font-size: 48rpx;
            color: #7c7c7c;
        }
        .contact{
            width: 100%;
            height: 100%;
            position: absolute;
            left: 0;top: 0;
            z-index: 3;
            opacity: 0;
        }
    }
    .select_mask{
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;left: 0;
        z-index: 102;
        background-color: rgba(0,0,0,.5)
    }
    .select_wrap{
        width: 100%;
        position: fixed;
        left: 0;bottom: 0;
        background-color: #fff;
        border-top: 1px solid #ccc;
        .goods_simple{
            $width: 160rpx;
            overflow: hidden;
            padding: 20rpx 30rpx 14rpx 30rpx;
            border-bottom: 1px solid #ccc;
            &_image{
                
                float: left;
                width: $width;
                height: $width;
                background: {
                    size: cover;
                    position: center;
                }
            }
            &_text{
                margin-left: $width + 12;
            }
            &_name{
                display: -webkit-box;
                overflow: hidden;
                -webkit-box-orient: vertical;
                -webkit-line-clamp: 2;
                font-size: 38rpx; 
            }
            &_price{
                margin-top: 8rpx;
                font-size: 32rpx;
                color: #fc3e62;
                float: left;
            }
            &_stock{
                font-size: 28rpx;
                float: right;
            }
            
            @at-root{
                .spec_not{
                    height: 100rpx;
                    line-height: 100rpx;
                    padding: 0 30rpx;
                    box-sizing: border-box;
                }
                .num_selected{
                    display: inline-block;
                    width: 170rpx;
                    height: 52rpx;
                    line-height: 52rpx;
                    border-radius: 8rpx;
                    text-align: center;
                    border: 1rpx solid #ccc;
                    margin-left: 36rpx;
                    vertical-align: middle;
                    view{
                        display: flex;
                        height: 52rpx;
                        input{
                            height: 52rpx;
                            line-height: 32rpx;
                            font-size: 24rpx;
                        }
                        text{
                            width: 48rpx;
                            flex-shrink: 0;
                            font-size: 24rpx;
                            box-sizing: border-box;
                        }
                        text:nth-of-type(1){
                            border-right: 1px solid #ccc;
                        }
                        text:nth-of-type(2){
                            border-left: 1px solid #ccc;
                        }
                    }
                }
                .submit_btn{
                    margin: 12rpx 30rpx;
                    padding: 20rpx;
                    box-sizing: border-box;
                    font-size: 32rpx;
                    background-color: #fc1a44;
                    text-align: center;
                    color: #fff;
                    border-radius: 12rpx;
                }
                .spec_props{
                    &_title{
                        font-size: 32rpx;
                        padding: 12rpx 30rpx;
                    }
                    &_cont{
                        display: flex;
                        padding: 0 60rpx;
                        box-sizing: border-box;
                        flex-wrap: wrap;
                    }
                    &_item{
                        font-size: 28rpx;
                        padding: 10rpx 16rpx;
                        border: 1px solid #ccc;
                        border-radius: 10rpx;
                        margin-right: 10rpx;
                        margin-bottom: 10rpx;
                    }
                    &_item_active{
                        background-color: #fc1a44;
                        border-color: #fff;
                        color: #fff;
                    }
                }
            }
        }
    }
    
</style>

<template>
    
    <view>
        <view class="goods_info_wrap" scroll-y>

            <!-- 富文本解析 -->
            <import src="../mixins/wxParse/wxParse.wxml"></import>

            <!-- 商品详情焦点图 -->
            <carousel :carouselConfig.sync="carouselConfig"></carousel>

            <!-- 价格 名称 -->
            <view class="goods_info_msg">
                <view class="goods_info_name">
                    {{goodsInfoData.name}}
                </view>
                <view class="goods_info_number">
                    <view class="goods_info_price">
                        <text>{{goodsInfoData.price}}</text>
                        <text>{{goodsInfoData.market_price}}</text>
                    </view>
                    <view class="goods_info_stock">
                        <text>月销: {{goodsInfoData.stock}}</text>
                        <text>库存: {{goodsInfoData.stock}}</text>
                    </view>
                </view>
            </view>
            <view class="goods_info_text_title">商品介绍</view>
            <view class="goods_info_text" wx:if="{{goodsInfoData.detail}}">
                <template is="wxParse" data="{{wxParseData: detailEle.nodes}}"></template>
            </view>

            <!-- 选择数量型号面板 -->
            <view class="{{mask ? 'select_mask' : ''}}" wx:if="{{selectBox}}" @tap="cancelBox">
                <view class="select_wrap" catchtap='catch'>
                    <view class="goods_simple">
                        <view class="goods_simple_image" style="background-image: url({{goodsInfoData.thumb}})"></view>
                        <view class="goods_simple_text">
                            <view class="goods_simple_name">{{goodsInfoData.name}}</view>
                            <view class="goods_simple_price">{{price}}</view>
                            <view class="goods_simple_stock">库存 : {{stock}}</view>
                        </view>
                    </view>

                    <!-- 有具体规格 -->
                    <view class="spec_yes">
                        <repeat for="{{goodsInfoData.props}}">
                            <view class="spec_props">
                                <view class="spec_props_title">
                                    {{item.name}}
                                </view>
                                <view class="spec_props_cont">
                                    <view
                                        wx:for="{{item.items}}" 
                                        wx:for-index="inx" 
                                        wx:key="{{inx}}" 
                                        data-index="{{index}}" 
                                        data-itemId="{{inx}}" 
                                        data-value="{{item}}" 
                                        @tap="selectAdd"
                                        class="spec_props_item {{inx == selectColor[index] ? 'spec_props_item_active' : ''}}" 
                                    >
                                        {{item}}
                                    </view>
                                </view>
                            </view>
                        </repeat>
                    </view>

                    <!-- 无具体规格 -->
                    <view class="spec_not">
                        <view class="goods_simple_num">
                            <text>购买数量 : </text> 
                            <view class="num_selected">
                                <view class="num_flex">
                                    <text @tap="reduce">-</text>
                                    <input 
                                        @input="inputChange" 
                                        @blur="inputBlur"
                                        @confirm="inputBlur"
                                        type="number" 
                                        value="{{count}}"
                                    />
                                    <text @tap="plus">+</text>
                                </view>
                            </view> 
                        </view>
                    </view>

                    <!-- 确认购买 -->
                    <view class="submit_btn" @tap="shoppingBtn">{{btnText}}</view>

                </view>
            </view>

        </view>
        <!-- 客服 加入购物车 付款-->
        <view class="tools_wrap">
            <view class="icon_size" @tap="openTel">
                <text class="iconfont icon-dianhua"></text>
            </view>
            <view class="icon_size">
                <contact-button class="contact"></contact-button>
                <text class="iconfont icon-kefu"></text>
            </view>
            <view class="icon_size">
                <text class="iconfont icon-lib" @tap="goTo" data-url="library"></text>
            </view>
            <view class="tools_btns" @tap="addLib">
                <text>加入购物车</text>
            </view>
            <view class="tools_btns" @tap="payBtn">
                <text>立即购买</text>
            </view>
        </view>
    </view>

</template>

<script>

    import wepy from 'wepy'
    import Carousel from '../components/swiper/Carousel'
    import wxParse from '../mixins/wxParse/wxParse'
    import retainedDecimalMoney from '../mixins/retainedDecimalMoney'

    export default class GoodsInfo extends wepy.page{
        config = {
            navigationBarTitleText: '商品详情'
        }
        components = {
            carousel: Carousel
        }
        data = {
            selectBox: false,
            skuStrs: [],
            addLib: true,
            sku: {},
            price: 0,
            mask: true,
            count: 1,
            reg: /^[0-9]{1,}$/,
            stock: 999,
            btnText: '',
            selectColor: [],
            selectStr: [],
            carouselConfig:{
                imgUrls: [],
                dotsColor: '#d9524f',
                dotsActiveColor: '#fff'
            },
            goodsInfoData: {},
            goodsMsg: {
                items: [],
                config_id: '',
                source: '',
                openid: ''
            }
        }
        
        methods = {
            catch(){
                //无用事件阻止点击内容的冒泡行为
            },
            goTo(e){
                const url = e.currentTarget.dataset.url
                wepy.switchTab({
                    url: url
                })
            },
            openTel(e){
                wepy.showModal({
                    title: '客服',
                    content: '是否拨打客服电话',
                    success: (res) => {
                        if(res.confirm){
                            const phoneNumber = wepy.getStorageSync('phoneNumber')
                            if(phoneNumber){
                                wepy.showToast({
                                    title: '商家暂时还没留电话呦!',
                                    duration: 1000
                                })
                            }
                            wepy.makePhoneCall({
                                phoneNumber: phoneNumber
                            })
                        }
                    }
                })
            },
            addLib(e){ //加入购物车按钮
                this.selectBox = true
                this.btnText = '加入购物车'
                this.addLib = true
            },
            payBtn(e){//购买按钮
                this.selectBox = true
                this.btnText = '立即购买'
                this.addLib = false
            },
            cancelBox(e){
                this.selectBox = false
            },
            selectAdd(e){
                const parentIndex = e.currentTarget.dataset.index
                const itemIndex = e.currentTarget.dataset.itemid
                const value = e.currentTarget.dataset.value
                this.selectStr[parentIndex] = value
                this.selectColor[parentIndex] = itemIndex
                let inx = this.getSku({
                    data: this.skuStrs,
                    search: this.selectStr.join('')
                }) 
                this.sku = this.goodsInfoData.sku[inx]
                this.price = retainedDecimalMoney(this.sku.price, 2)
                this.goodsId = this.goodsInfoData.id
                this.$apply()
            },
            shoppingBtn(e){
                const newGoodsMsg = {
                    goods_id: this.goodsInfoData.id,
                    goods_name: this.goodsInfoData.name,
                    skucode: this.sku.skucode,
                    props: this.selectStr.join(' '),
                    price: this.sku.price || this.goodsInfoData.price.substr(1),
                    quantity: this.count,
                    stock: this.sku.stock || this.goodsInfoData.stock,
                    thumb: this.sku.img ? `${this.api_host}${this.sku.img[0]}` : this.goodsInfoData.thumb,
                    allPrice: this.price
                }
                if(this.addLib){ //判断是添加购物车还是立即购买 addLib 成立时是添加购物车
                    this.selectBox = false
                    let selected = wepy.getStorageSync('selectedGoods')
                    if(selected){
                        //判断本地是否存在已加入购物车的商品 已有的话取出数据在items上push新商品如果skucode相同 和 goods_id相同就增加数量
                        
                        for(let i = 0, len = selected.items.length; i < len; i++){
                            let item = selected.items[i]
                            if(item.skucode == newGoodsMsg.skucode && item.goods_id == newGoodsMsg.goods_id){
                                selected.items[i].quantity = item.quantity + newGoodsMsg.quantity
                                const total = item.quantity * newGoodsMsg.price
                                selected.items[i].total = retainedDecimalMoney(total)
                                wepy.setStorageSync('selectedGoods', selected)
                                wepy.showToast({
                                    title: '加入成功'
                                })
                                return 
                            }
                        }
                        selected.items.push(newGoodsMsg)
                        wepy.setStorageSync('selectedGoods', selected)
                    }else{
                        this.goodsMsg.items[0] = newGoodsMsg
                        wepy.setStorageSync('selectedGoods', this.goodsMsg)
                    }
                    wepy.showToast({
                        title: '加入成功'
                    })
                }else{
                    wepy.setStorageSync('payGoods', [newGoodsMsg])
                    wepy.navigateTo({
                        url: `payment`
                    })
                }
            },
            reduce(){
                this.count--
                this.count = this.count < 1 ? 1 : this.count
                const price = this.sku.price || this.goodsInfoData.price.substr(1)
                let allPrice = price * this.count
                this.price = retainedDecimalMoney(allPrice)
                this.$apply()
            },
            plus(){
                this.count++
                this.count = this.count > this.stock ? this.stock : this.count
                const price = this.sku.price || this.goodsInfoData.price.substr(1)
                let allPrice = price * this.count
                this.price = retainedDecimalMoney(allPrice)
                this.$apply()
            },
            telChange(e){
                this.$broadcast('phoneNum', e.detail.value)
            },  
            inputChange(e){
                let val = e.detail.value
                if(!this.reg.test(val)){
                    wepy.showToast({
                        title: `只能输入数字哟`,
                        icon: 'none',
                        duration: 2000
                    })
                }
                if(val > this.stock){
                    wepy.showToast({
                        title: `库存不足,最大${this.stock}`,
                        icon: 'none',
                        duration: 2000
                    })
                    this.count = this.stock
                }else if(val < 1){
                    wepy.showToast({
                        title: `最少要选一个哟`,
                        icon: 'none',
                        duration: 2000
                    })
                }
                this.count = val
                // this.$apply()
            },
            inputBlur(){
                if(!this.reg.test(this.count)){
                    this.count = 1
                }
                this.count = this.count > this.stock ? this.stock : this.count < 1 ? 1 : this.count
                this.$apply()
            }
        }
        getSku(obj, inx) {
            var strs = [] //匹配到的字符串集合
            var indexs = []; //匹配到的索引集合
            var num = inx || 0
            obj.data.forEach((item, index) => {
                if (item.indexOf(obj.search[num]) != -1) {
                    // console.log(obj.search[num])
                    strs.push(item);
                    obj.index ? indexs.push(obj.index[index]) : indexs.push(index)
                }

            })
            if (strs.length > 1) {
                num++;
                return this.getSku({
                    data: strs, //进行匹配的全部字符串 集合
                    search: obj.search, //需要匹配的字符串
                    index: indexs //匹配到的索引集合
                }, num)
            } else {
                return indexs[0]
            }
        }
        getGoodsInfoData(){
            wepy.request({
                url: `${this.api_host}/restapi/goods/${this.id}`,
                methods: 'POST',
                data: {
                    config_id: this.config_id
                },
                success: (res) => {
                    console.log(res.data.data)
                    let imgs = res.data.data.imgs || res.data.data.thumb
                    console.log(imgs)
                    const data = res.data.data
                    // 轮播图
                    if(Array.isArray(imgs)){
                        imgs.forEach( item => {
                            this.carouselConfig.imgUrls.push(item)
                        });
                        this.carouselConfig.mode = 'aspectFill'
                        this.$apply()
                    }else{
                        imgs = imgs.indexOf('http') > -1 ? imgs : `${this.img_host}${imgs}`
                        this.carouselConfig.imgUrls.push(imgs)
                        this.carouselConfig.dots = false
                        this.carouselConfig.mode = 'aspectFill'
                        console.log(this.carouselConfig)
                        this.$apply()
                    }
                    
                    this.goodsInfoData.name = data.name
                    this.goodsInfoData.id = data.id
                    this.goodsInfoData.detail = data.detail
                    this.goodsInfoData.price = this.retainedDecimalMoney(data.price, 2)
                    this.goodsInfoData.market_price = this.retainedDecimalMoney(data.market_price, 2)
                    this.goodsInfoData.stock = data.stock
                    this.goodsInfoData.thumb = imgs.indexOf('http') > -1 ? imgs : `${this.img_host}${imgs}`
                    this.goodsInfoData.props = data.props
                    this.goodsInfoData.sku = data.sku
                    this.price = this.retainedDecimalMoney(data.price, 2)
                    data.sku && data.sku.forEach( item => {
                        let str = ''
                        item.value.forEach( i => {
                            str += i.value
                        });
                        this.skuStrs.push(str)
                    })
                    wxParse.wxParse('detailEle', 'html', data.detail, this)
                    this.$apply()
                    wepy.hideLoading()
                }   
            })
        }
        retainedDecimalMoney(num, several){
            if(typeof num !== 'string') num = num.toString()
            const price = num.indexOf('.') > -1 ? `￥${parseFloat(num).toFixed(several)}` : num > 0 ? `￥${num}.00` : '￥0'
            return price
        }
        getExtJson(){
            if (wepy.getExtConfigSync) {
                const extConfig = wepy.getExtConfigSync();
                this.api_host = extConfig.api_host
                this.img_host = extConfig.img_host
                this.config_id = extConfig.config_id
                this.merchant_id = extConfig.merchant_id
            }
        }
        onHide(){
            this.selectBox = false;
        }
        onLoad(option){
            wepy.showLoading({
                title: '加载中...',
                mask: true
            })
            this.id = option.id
            this.getExtJson()
            this.getGoodsInfoData()


        }
    }

</script>


